---
- name: Install Nginx
  apt:
    name: nginx
    state: present
    update_cache: yes

- name: Remove default nginx configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: List enabled Nginx config templates (*.conf.j2 only)
  find:
    paths: "../deployment/templates/nginx"
    patterns: "*.conf.j2"
    recurse: false
  register: nginx_config_files
  delegate_to: localhost
  tags:
    - deploy

- name: Remove sites-enabled directory if test failed
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled
    state: absent
  when: nginx_config_test.rc != 0

- name: Recreate sites-enabled directory if test failed
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled
    state: directory
    mode: '0755'
  when: nginx_config_test.rc != 0

- name: Backup Nginx sites-enabled directory
  ansible.builtin.copy:
    src: /etc/nginx/sites-enabled/
    dest: /tmp/nginx-sites-enabled-backup/
    remote_src: yes

- name: Copy custom Nginx configs
  template:
    src: "{{ item.path }}"
    dest: "/etc/nginx/sites-enabled/{{ item.path | basename | regex_replace('\\.conf\\.j2$', '') }}"
  loop: "{{ nginx_config_files.files }}"
  when: nginx_config_files.matched > 0
  register: nginx_config_copy
  tags:
    - deploy

- name: Copy Nginx portainer config
  template:
    src: portainer.conf.j2
    dest: /etc/nginx/sites-enabled/portainer
  register: nginx_portainer_config
  tags:
    - portainer
    - configure_host

- name: Test Nginx configuration
  ansible.builtin.command: nginx -t
  register: nginx_config_test
  changed_when: false
  failed_when: false

- name: Rollback Nginx configuration if test failed
  ansible.builtin.copy:
    src: /tmp/nginx-sites-enabled-backup/
    dest: /etc/nginx/sites-enabled/
    remote_src: yes
  when: nginx_config_test.rc != 0

- name: Fail if Nginx config test failed
  ansible.builtin.fail:
    msg: "Nginx configuration test failed: {{ nginx_config_test.stderr }}"
  when: nginx_config_test.rc != 0

- name: Trigger Nginx restart if configs were changed and test passed
  ansible.builtin.debug:
    msg: "Configuration test passed, triggering restart"
  changed_when: (nginx_config_copy is defined and nginx_config_copy.changed) or (nginx_portainer_config is defined and nginx_portainer_config.changed)
  notify:
    - Restart Nginx
  when: nginx_config_test.rc == 0

- name: Enable Nginx
  service:
    name: nginx
    enabled: yes
    state: started

- name: Nginx is running
  service:
    name: nginx
    state: started
