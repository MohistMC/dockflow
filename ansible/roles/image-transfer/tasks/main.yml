---
- name: Set docker images path based on hostname
  set_fact:
    docker_images_path: "{{ '../../.deployment/docker/docker_images_' + hostname if hostname and hostname != 'main' else '../../.deployment/docker/docker_images' }}"

- name: List all .tar files on local server (where Ansible is running)
  find:
    paths: "{{ docker_images_path }}"
    patterns: "*.tar"
  delegate_to: localhost
  register: tar_files

- name: Display docker images directory being used
  debug:
    msg: "Using docker images directory: {{ docker_images_path }}"

- name: Copy all Docker images to remote server
  copy:
    src: "{{ item.path }}"
    dest: "/tmp/{{ item.path | basename }}"
  loop: "{{ tar_files.files | default([]) }}"
  register: copy_output

- name: Load Docker images on remote server (parallel)
  command: "docker load -i /tmp/{{ item.path | basename }}"
  loop: "{{ tar_files.files | default([]) }}"
  async: 600
  poll: 0
  register: load_jobs

- name: Wait for all image loads to complete
  async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ load_jobs.results }}"
  register: load_results
  until: load_results.finished
  retries: 60
  delay: 10
  loop_control:
    label: "Loading {{ item.item.path | basename }}"

- name: Delete loaded tar files
  file:
    path: "/tmp/{{ item.path | basename }}"
    state: absent
  loop: "{{ tar_files.files | default([]) }}"
